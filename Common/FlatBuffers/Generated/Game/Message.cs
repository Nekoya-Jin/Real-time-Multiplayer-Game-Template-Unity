// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Message : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Message GetRootAsMessage(ByteBuffer _bb) { return GetRootAsMessage(_bb, new Message()); }
  public static Message GetRootAsMessage(ByteBuffer _bb, Message obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool MessageBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "GPKT"); }
  public static bool VerifyMessage(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("GPKT", false, MessageVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Game.PacketType Type { get { int o = __p.__offset(4); return o != 0 ? (Game.PacketType)__p.bb.Get(o + __p.bb_pos) : Game.PacketType.NONE; } }
  public Game.MoveReq? MoveReq { get { int o = __p.__offset(6); return o != 0 ? (Game.MoveReq?)(new Game.MoveReq()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.MoveRes? MoveRes { get { int o = __p.__offset(8); return o != 0 ? (Game.MoveRes?)(new Game.MoveRes()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.CLeaveGame? CLeaveGame { get { int o = __p.__offset(10); return o != 0 ? (Game.CLeaveGame?)(new Game.CLeaveGame()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.CMove? CMove { get { int o = __p.__offset(12); return o != 0 ? (Game.CMove?)(new Game.CMove()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.SBroadcastEnterGame? SBroadcastEnterGame { get { int o = __p.__offset(14); return o != 0 ? (Game.SBroadcastEnterGame?)(new Game.SBroadcastEnterGame()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.SBroadcastLeaveGame? SBroadcastLeaveGame { get { int o = __p.__offset(16); return o != 0 ? (Game.SBroadcastLeaveGame?)(new Game.SBroadcastLeaveGame()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.SPlayerList? SPlayerList { get { int o = __p.__offset(18); return o != 0 ? (Game.SPlayerList?)(new Game.SPlayerList()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Game.SBroadcastMove? SBroadcastMove { get { int o = __p.__offset(20); return o != 0 ? (Game.SBroadcastMove?)(new Game.SBroadcastMove()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Game.Message> CreateMessage(FlatBufferBuilder builder,
      Game.PacketType type = Game.PacketType.NONE,
      Offset<Game.MoveReq> moveReqOffset = default(Offset<Game.MoveReq>),
      Offset<Game.MoveRes> moveResOffset = default(Offset<Game.MoveRes>),
      Offset<Game.CLeaveGame> cLeaveGameOffset = default(Offset<Game.CLeaveGame>),
      Offset<Game.CMove> cMoveOffset = default(Offset<Game.CMove>),
      Offset<Game.SBroadcastEnterGame> sBroadcastEnterGameOffset = default(Offset<Game.SBroadcastEnterGame>),
      Offset<Game.SBroadcastLeaveGame> sBroadcastLeaveGameOffset = default(Offset<Game.SBroadcastLeaveGame>),
      Offset<Game.SPlayerList> sPlayerListOffset = default(Offset<Game.SPlayerList>),
      Offset<Game.SBroadcastMove> sBroadcastMoveOffset = default(Offset<Game.SBroadcastMove>)) {
    builder.StartTable(9);
    Message.AddSBroadcastMove(builder, sBroadcastMoveOffset);
    Message.AddSPlayerList(builder, sPlayerListOffset);
    Message.AddSBroadcastLeaveGame(builder, sBroadcastLeaveGameOffset);
    Message.AddSBroadcastEnterGame(builder, sBroadcastEnterGameOffset);
    Message.AddCMove(builder, cMoveOffset);
    Message.AddCLeaveGame(builder, cLeaveGameOffset);
    Message.AddMoveRes(builder, moveResOffset);
    Message.AddMoveReq(builder, moveReqOffset);
    Message.AddType(builder, type);
    return Message.EndMessage(builder);
  }

  public static void StartMessage(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddType(FlatBufferBuilder builder, Game.PacketType type) { builder.AddByte(0, (byte)type, 0); }
  public static void AddMoveReq(FlatBufferBuilder builder, Offset<Game.MoveReq> moveReqOffset) { builder.AddOffset(1, moveReqOffset.Value, 0); }
  public static void AddMoveRes(FlatBufferBuilder builder, Offset<Game.MoveRes> moveResOffset) { builder.AddOffset(2, moveResOffset.Value, 0); }
  public static void AddCLeaveGame(FlatBufferBuilder builder, Offset<Game.CLeaveGame> cLeaveGameOffset) { builder.AddOffset(3, cLeaveGameOffset.Value, 0); }
  public static void AddCMove(FlatBufferBuilder builder, Offset<Game.CMove> cMoveOffset) { builder.AddOffset(4, cMoveOffset.Value, 0); }
  public static void AddSBroadcastEnterGame(FlatBufferBuilder builder, Offset<Game.SBroadcastEnterGame> sBroadcastEnterGameOffset) { builder.AddOffset(5, sBroadcastEnterGameOffset.Value, 0); }
  public static void AddSBroadcastLeaveGame(FlatBufferBuilder builder, Offset<Game.SBroadcastLeaveGame> sBroadcastLeaveGameOffset) { builder.AddOffset(6, sBroadcastLeaveGameOffset.Value, 0); }
  public static void AddSPlayerList(FlatBufferBuilder builder, Offset<Game.SPlayerList> sPlayerListOffset) { builder.AddOffset(7, sPlayerListOffset.Value, 0); }
  public static void AddSBroadcastMove(FlatBufferBuilder builder, Offset<Game.SBroadcastMove> sBroadcastMoveOffset) { builder.AddOffset(8, sBroadcastMoveOffset.Value, 0); }
  public static Offset<Game.Message> EndMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Game.Message>(o);
  }
  public static void FinishMessageBuffer(FlatBufferBuilder builder, Offset<Game.Message> offset) { builder.Finish(offset.Value, "GPKT"); }
  public static void FinishSizePrefixedMessageBuffer(FlatBufferBuilder builder, Offset<Game.Message> offset) { builder.FinishSizePrefixed(offset.Value, "GPKT"); }
}


static public class MessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Type*/, 1 /*Game.PacketType*/, 1, false)
      && verifier.VerifyTable(tablePos, 6 /*MoveReq*/, Game.MoveReqVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 8 /*MoveRes*/, Game.MoveResVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 10 /*CLeaveGame*/, Game.CLeaveGameVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 12 /*CMove*/, Game.CMoveVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 14 /*SBroadcastEnterGame*/, Game.SBroadcastEnterGameVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 16 /*SBroadcastLeaveGame*/, Game.SBroadcastLeaveGameVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 18 /*SPlayerList*/, Game.SPlayerListVerify.Verify, false)
      && verifier.VerifyTable(tablePos, 20 /*SBroadcastMove*/, Game.SBroadcastMoveVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
